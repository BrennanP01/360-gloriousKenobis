{"ast":null,"code":"import _classCallCheck from\"/home/n3rd/Documents/gloriousKenobis/360-gloriousKenobis/mosaicWithReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/n3rd/Documents/gloriousKenobis/360-gloriousKenobis/mosaicWithReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/n3rd/Documents/gloriousKenobis/360-gloriousKenobis/mosaicWithReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/n3rd/Documents/gloriousKenobis/360-gloriousKenobis/mosaicWithReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/n3rd/Documents/gloriousKenobis/360-gloriousKenobis/mosaicWithReact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./App.css';import facedraw from'./facedraw.png';import{randomNumber,randomizeColor}from'./Functions.js';/************************************************************\n* This class is responsible of building the business logic  *\n* The class build the header, body and footer of the mosaic *\n************************************************************/var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.forceRandom=_this.forceRandom.bind(_assertThisInitialized(_this));_this.state={/*\t\t\tvalue: null,*/newRendering:false};return _this;}/*********************************************\n\t* Function to create a table with:           *\n\t*\t\tThe shape                            *\n\t*\t\tCode to print in the foreground      *\n\t*********************************************/_createClass(App,[{key:\"createTable\",value:function createTable(){var table=[];for(var i=1;i<145;i++){var randShape=randomNumber(0,2);var randCode=randomNumber(65,91);var randLetter=String.fromCharCode(randCode);if(randShape===0){table.push(/*#__PURE__*/React.createElement(Shape,{key:i.toString(),id:i.toString(),name:\"square\",value:randLetter}));}else{table.push(/*#__PURE__*/React.createElement(Shape,{key:i.toString(),id:i.toString(),name:\"circle\",value:randLetter}));}}return table;}/******************************************************\n\t* Function to refresh the complete mosaic with random *\n\t* shapes, characters and colors                       *\n\t******************************************************/},{key:\"forceRandom\",value:function forceRandom(){var newRendering=this.state.newRendering;if(newRendering){this.setState({newRendering:false});}else{this.setState({newRendering:true});}}},{key:\"render\",value:function render(){var table=this.createTable();return/*#__PURE__*/React.createElement(\"div\",{className:\"base\"},/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},/*#__PURE__*/React.createElement(\"button\",{className:\"circle1\",style:{backgroundColor:'red',color:'red'}}),/*#__PURE__*/React.createElement(\"button\",{className:\"circle1\",style:{backgroundColor:'green',color:'green'}}),/*#__PURE__*/React.createElement(\"button\",{className:\"circle1\",style:{backgroundColor:'yellow',color:'yellow'}})),/*#__PURE__*/React.createElement(\"div\",{className:\"mosaic\"},table),/*#__PURE__*/React.createElement(\"div\",{className:\"footer\"},/*#__PURE__*/React.createElement(\"button\",{className:\"randbutton\",onClick:this.forceRandom},\"Randomize!\")));}}]);return App;}(Component);/********************************************************************\n* This class is responsible for building every cell of the mosaic   *\n* The class receive the shape and the foreground character to print *\n* and calculate random color codes for these elements               *\n********************************************************************/export{App as default};var Shape=/*#__PURE__*/function(_Component2){_inherits(Shape,_Component2);var _super2=_createSuper(Shape);function Shape(props){var _this2;_classCallCheck(this,Shape);_this2=_super2.call(this,props);_this2.refButton=React.createRef();_this2.clickShape=_this2.clickShape.bind(_assertThisInitialized(_this2));_this2.state={value:null,innerHTML:null};return _this2;}/***********************************************************\n\t* Function to update a single shape. Everytime is accessed *\n\t* the character is swapped to a number and when accessed   *\n\t* again, recovers the character associated to the shape    *\n\t* Shape and colors are not updated                         *\n\t***********************************************************/ /*\tclickShape = () => { */_createClass(Shape,[{key:\"clickShape\",value:function clickShape(){/*\t\tconsole.log (this.refButton);*/if(this.refButton.current.innerText===\"\"){this.refButton.current.innerHTML=this.innerHTML;}else{this.innerHTML=this.refButton.current.innerHTML;this.refButton.current.innerHTML=\"<img class='image' src='\"+facedraw+\"' alt='5'/>\";}}},{key:\"render\",value:function render(){/*const baseColor = rgb2hex (170, 170, 170);*/ /*const baseColor = rgb2hex (221, 221, 221);*/var baseColor=\"#dddddd\";var backColor=randomizeColor(baseColor);var fontColor=randomizeColor(backColor);var characterInside=this.props.value;var keyValue=this.props.id;var className=this.props.name;return/*#__PURE__*/React.createElement(\"button\",{key:keyValue,ref:this.refButton,id:keyValue,value:characterInside.toString(),className:className,style:{backgroundColor:backColor,color:fontColor},onClick:this.clickShape},characterInside);}}]);return Shape;}(Component);","map":{"version":3,"sources":["/home/n3rd/Documents/gloriousKenobis/360-gloriousKenobis/mosaicWithReact/src/App.js"],"names":["React","Component","facedraw","randomNumber","randomizeColor","App","props","forceRandom","bind","state","newRendering","table","i","randShape","randCode","randLetter","String","fromCharCode","push","toString","setState","createTable","backgroundColor","color","Shape","refButton","createRef","clickShape","value","innerHTML","current","innerText","baseColor","backColor","fontColor","characterInside","keyValue","id","className","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport facedraw from './facedraw.png';\nimport {randomNumber, randomizeColor} from './Functions.js';\n\n/************************************************************\n* This class is responsible of building the business logic  *\n* The class build the header, body and footer of the mosaic *\n************************************************************/\nexport default class App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.forceRandom = this.forceRandom.bind (this);\n\t\tthis.state = {\n/*\t\t\tvalue: null,*/\n\t\t\tnewRendering: false\n\t\t};\n\t}\n\n\t/*********************************************\n\t* Function to create a table with:           *\n\t*\t\tThe shape                            *\n\t*\t\tCode to print in the foreground      *\n\t*********************************************/\n\tcreateTable () {\n\t\tlet table = [];\n\n\t\tfor (let i = 1; i < 145; i++) {\n\t\t\tlet randShape = randomNumber(0, 2);\n\t\t\tlet randCode = randomNumber(65, 91);\n\t\t\tlet randLetter = String.fromCharCode (randCode);\n\t\t\tif (randShape === 0) {\n\t\t\t\ttable.push(<Shape\n\t\t\t\t\tkey={i.toString()}\n\t\t\t\t\tid={i.toString()}\n\t\t\t\t\tname='square'\n\t\t\t\t\tvalue={randLetter} />);\n\t\t\t} else {\n\t\t\t\ttable.push(<Shape\n\t\t\t\t\tkey={i.toString()}\n\t\t\t\t\tid={i.toString()}\n\t\t\t\t\tname='circle'\n\t\t\t\t\tvalue={randLetter} />);\n\t\t\t}\n\t\t}\n\t\treturn table;\n\t}\n\n\t/******************************************************\n\t* Function to refresh the complete mosaic with random *\n\t* shapes, characters and colors                       *\n\t******************************************************/\n\tforceRandom() {\n\t\tconst newRendering = this.state.newRendering;\n\t\tif (newRendering) {\n\t\t\tthis.setState ({newRendering: false});\n\t\t} else {\n\t\t\tthis.setState ({newRendering: true});\n\t\t}\n\t}\n\t\n\trender() {\n\t\tlet table = this.createTable ();\n\t\treturn (\n\t\t\t<div className='base'>\n\t\t\t\t<div className='header'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='circle1'\n\t\t\t\t\t\tstyle={{backgroundColor: 'red', color: 'red'}}\n\t\t\t\t\t></button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='circle1'\n\t\t\t\t\t\tstyle={{backgroundColor: 'green', color: 'green'}}\n\t\t\t\t\t></button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='circle1'\n\t\t\t\t\t\tstyle={{backgroundColor: 'yellow', color: 'yellow'}}\n\t\t\t\t\t></button>\n\t\t\t\t</div>\n\t\t\t\t<div className='mosaic'>\n\t\t\t\t\t{table}\n\t\t\t\t</div>\n\t\t\t\t<div className='footer'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='randbutton'\n\t\t\t\t\t\tonClick={this.forceRandom}\n\t\t\t\t\t>\n\t\t\t\t\t\tRandomize!\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n/********************************************************************\n* This class is responsible for building every cell of the mosaic   *\n* The class receive the shape and the foreground character to print *\n* and calculate random color codes for these elements               *\n********************************************************************/\nclass Shape extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.refButton = React.createRef();\n\t\tthis.clickShape = this.clickShape.bind (this);\n\t\tthis.state = {\n\t\t\tvalue: null,\n\t\t\tinnerHTML: null,\n\t\t};\n\t}\n\n\t/***********************************************************\n\t* Function to update a single shape. Everytime is accessed *\n\t* the character is swapped to a number and when accessed   *\n\t* again, recovers the character associated to the shape    *\n\t* Shape and colors are not updated                         *\n\t***********************************************************/\n/*\tclickShape = () => { */\n\tclickShape () {\n/*\t\tconsole.log (this.refButton);*/\n\t\tif (this.refButton.current.innerText === \"\") {\n\t\t\tthis.refButton.current.innerHTML = this.innerHTML;\n\t\t} else {\n\t\t\tthis.innerHTML = this.refButton.current.innerHTML;\n\t\t\tthis.refButton.current.innerHTML = \n\t\t\t\t\t\"<img class='image' src='\"+facedraw+\"' alt='5'/>\";\n\t\t}\n\t}\n\n\trender() {\n\t\t/*const baseColor = rgb2hex (170, 170, 170);*/\n\t\t/*const baseColor = rgb2hex (221, 221, 221);*/\n\t\tconst baseColor = \"#dddddd\";\n\t\tlet backColor = randomizeColor (baseColor);\n\t\tlet fontColor = randomizeColor (backColor);\n\t\tlet characterInside = this.props.value;\n\t\tlet keyValue = this.props.id;\n\t\tlet className = this.props.name;\n\t\treturn (\n\t\t\t<button\n\t\t\t\tkey={keyValue}\n\t\t\t\tref={this.refButton}\n\t\t\t\tid={keyValue}\n\t\t\t\tvalue={characterInside.toString()}\n\t\t\t\tclassName={className}\n\t\t\t\tstyle={{backgroundColor: backColor, color: fontColor}}\n\t\t\t\tonClick={this.clickShape}\n\t\t\t>\n\t\t\t\t{characterInside}\n\t\t\t</button>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}